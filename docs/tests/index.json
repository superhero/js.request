{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-14T10:07:01.302Z",
    "end": "2021-04-14T10:07:04.880Z",
    "duration": 3578,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "d031511e-9586-4938-a63e-c029a90182e6",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d1ae32ea-f32e-4630-aab7-d3e76e14ae63",
        "title": "request tests",
        "fullFile": "/Users/eriklandvall/Workspace/js.request/test.js",
        "file": "/test.js",
        "beforeHooks": [],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "request tests \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log('\\n')\nprocess.env.HTTP_PROXY\n? console.log(`HTTP_PROXY env variable is set to: ${process.env.HTTP_PROXY}`)\n: console.log('HTTP_PROXY env variable is not set')",
            "err": {},
            "isRoot": false,
            "uuid": "e4beeaa5-42c2-4818-b4f0-84230160d6ce",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "simple GET http request",
            "fullTitle": "request tests simple GET http request",
            "timedOut": false,
            "duration": 253,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await request.get('http://httpbin.org/get?foo=bar')\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "c60e3960-fd29-4109-879c-e831795543b5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple GET https request",
            "fullTitle": "request tests simple GET https request",
            "timedOut": false,
            "duration": 475,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await request.get('https://httpbin.org/get?foo=bar')\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "27acc1ea-3089-4394-b40a-e16e310f214a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple POST http request",
            "fullTitle": "request tests simple POST http request",
            "timedOut": false,
            "duration": 239,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/post',\ndata      = { foo:'bar' },\nresponse  = await request.post({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "01976168-8144-4fcb-a949-d7d47081f22c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple POST https request",
            "fullTitle": "request tests simple POST https request",
            "timedOut": false,
            "duration": 380,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/post',\ndata      = { foo:'bar' },\nresponse  = await request.post({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "35f793d8-d45f-4904-b3df-550eaa1116dd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple PUT http request",
            "fullTitle": "request tests simple PUT http request",
            "timedOut": false,
            "duration": 231,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/put',\ndata      = { foo:'bar' },\nresponse  = await request.put({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "6a1ad873-36a2-4ffe-bd56-76e094f5e3df",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple PUT https request",
            "fullTitle": "request tests simple PUT https request",
            "timedOut": false,
            "duration": 662,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/put',\ndata      = { foo:'bar' },\nresponse  = await request.put({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "a5f2e07d-c185-416a-9160-905e5461b062",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple DELETE http request",
            "fullTitle": "request tests simple DELETE http request",
            "timedOut": false,
            "duration": 232,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/delete',\ndata      = { foo:'bar' },\nresponse  = await request.delete({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "74148622-5b11-4ea6-91c1-90edcd0cef20",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple DELETE https request",
            "fullTitle": "request tests simple DELETE https request",
            "timedOut": false,
            "duration": 357,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/delete',\ndata      = { foo:'bar' },\nresponse  = await request.delete({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "0300bd90-1fe8-44c5-b77f-a5495b81d0cb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple GET http request",
            "fullTitle": "request tests simple GET http request",
            "timedOut": false,
            "duration": 258,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/get?foo=bar',\nheaders   = { 'content-type':'json/application' },\nresponse  = await request.get({ url, headers })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "b4a419ce-7f52-4650-ad3c-002c3e610735",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "204 status test",
            "fullTitle": "request tests 204 status test",
            "timedOut": false,
            "duration": 237,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/status/204',\nheaders   = { 'content-type':'json/application', accept:'json/application' },\nresponse  = await request.put({ url, headers, retry:3 })\nexpect(response.status).to.be.equal(204)",
            "err": {},
            "isRoot": false,
            "uuid": "92aa54f8-238b-408e-a3f7-32cbbf16b7e0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "500 error test",
            "fullTitle": "request tests 500 error test",
            "timedOut": false,
            "duration": 218,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/status/500',\nheaders   = { 'content-type':'json/application' },\nresponse  = await request.get({ url, headers, retry:3 })\nexpect(response.status).to.be.equal(500)",
            "err": {},
            "isRoot": false,
            "uuid": "f0cb6654-c3b8-480b-8f95-616b623c5d14",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "408 error test",
            "fullTitle": "request tests 408 error test",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl     = 'http://httpbin.org/delay/2',\nheaders = { 'content-type':'json/application' }\ntry\n{\n  const response = await request.get({ url, headers, timeout:10 })\n  expect(response).to.be.equal('should never happen')\n}\ncatch(error)\n{\n  expect(error.code).to.be.equal('E_REQUEST_CLIENT_TIMEOUT')\n}",
            "err": {},
            "isRoot": false,
            "uuid": "ef387b71-a068-4e71-8bde-c409dce28064",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c60e3960-fd29-4109-879c-e831795543b5",
          "27acc1ea-3089-4394-b40a-e16e310f214a",
          "01976168-8144-4fcb-a949-d7d47081f22c",
          "35f793d8-d45f-4904-b3df-550eaa1116dd",
          "6a1ad873-36a2-4ffe-bd56-76e094f5e3df",
          "a5f2e07d-c185-416a-9160-905e5461b062",
          "74148622-5b11-4ea6-91c1-90edcd0cef20",
          "0300bd90-1fe8-44c5-b77f-a5495b81d0cb",
          "b4a419ce-7f52-4650-ad3c-002c3e610735",
          "92aa54f8-238b-408e-a3f7-32cbbf16b7e0",
          "f0cb6654-c3b8-480b-8f95-616b623c5d14",
          "ef387b71-a068-4e71-8bde-c409dce28064"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3556,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2021
}